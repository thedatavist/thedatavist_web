{"title":"Lumo: a clean Quarto template","markdown":{"yaml":{"title":"Lumo: a clean Quarto template","subtitle":" Quarto is a powerful tool that transforms R or Python code into beautifully clean reports. <br/> `Lumo` is a __custom format__ for Quarto, enhancing the default appearance to make it even more polished and aligned with your brand. <br/> This document showcases how a lumo-styled document looks. ","format":{"lumo-html":{"logo":"logo.png","github-repo":"https://www.github.com","primary-color":"black","self-contained":true,"is-particlejs-enabled":true}},"author":"Holtz Yan","date":"last-modified"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\n\nQuarto is probably my favorite tool in the R/Python universe. Transforming your code and thoughts into a stunning report in one click always blows my mind.\n\nWhile the default Quarto appearance **looks great**, there are [a few tweaks](https://www.productive-r-workflow.com/quarto-tricks) I always apply to elevate the report even further. Rather than manually adding them each time, I bundled everything into a custom format called `lumo`.\n\n\n::: {.column-margin}\n\nBtw, you can learn how to master Quarto thanks to my online course: [Productive R Workflow](https://www.productive-r-workflow.com)\n\n:::\n\n\nThis document aims at showcasing how a quarto document made with the `lumo` format looks like.\n\n\n## Load Packages\n\nMake sure to load **all your packages** at the start of your document for clarity and consistency.\n\nNotice that the code chunks are folded by default. You can adjust this behavior with the `code-fold` option in the document's YAML header.\n\n\n```{r, warning=F, message=F}\nlibrary(tidyverse) \nlibrary(hrbrthemes) # <1>\nlibrary(viridis) # <2>\nlibrary(ggiraph)\nlibrary(patchwork) \nlibrary(sf)\n```\n\n1. this package provides my favorite `ggplot2` theme: `theme_ipsum()`\n2. because I was too lazy to find something better in the [R Color Finder](https://r-graph-gallery.com/color-palette-finder)!\n\n:::{.callout}\nBy the way, you should open the code chunk that is folded above. ‚¨ÜÔ∏è\nThere is a little stunning surprise on its right hand side.\n:::\n\n\n## Main Features\n\n### Typography\n\nYou may have noticed the typography differs from the default Quarto style. I've also added __extra spacing__ above each title for better readability, and underlined them to make the headings stand out more.\n\n### Header & Footer\n\nThe header is fully customized, complete with a fun GitHub corner linking to the original code. Plus, there are animated particles for a touch of whimsy. Scroll down, and you'll find a custom footer as well.\n\n<hr/>\n\nFor a complete list of features, [visit the documentation](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!\n\nOh and since we're here, did you know you can easily include a full width interactive map with `leaflet` in a quarto doc? üòç\n```{r}\n#| column: screen\n#| out-width: 100%\n\n# Load the library.\nlibrary(leaflet)\n\n# Make a map\nleaflet() %>%\n  addTiles() %>% # Add default OpenStreetMap map tiles\n  addMarkers(lng = 174.768, lat = -36.852, popup = \"The birthplace of R\")\n```\n\n\n## How It Works\n\n`Lumo` is a Quarto **custom format**. With a single command, you can add an `_extension` folder to your working directory, containing all the styles and content needed to create a report like this.\n\nIt takes less than 28 seconds, and you can find all the details [here](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template).\n\n<hr/>\n\nBy the way, did you know you can link graphs together using [ggiraph](https://r-graph-gallery.com/package/ggiraph.html)? Its syntax is quite similar to `ggplot2` and it produces stunning, interactive outputs. Try hovering over one of the charts below!\n\nPretty close to magic, isn‚Äôt it?\n\n\n```{r, fig.cap=\"Figure: three graphs connected thanks to `ggiraph`\"}\n\n# Read the full world map\nworld_sf <- read_sf(\"https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/world.geojson\")\nworld_sf <- world_sf %>%\n  filter(!name %in% c(\"Antarctica\", \"Greenland\"))\n\n# Create a sample dataset\nhappiness_data <- data.frame(\n  Country = c(\n    \"France\", \"Germany\", \"United Kingdom\",\n    \"Japan\", \"China\", \"Vietnam\",\n    \"United States of America\", \"Canada\", \"Mexico\"\n  ),\n  Continent = c(\n    \"Europe\", \"Europe\", \"Europe\",\n    \"Asia\", \"Asia\", \"Asia\",\n    \"North America\", \"North America\", \"North America\"\n  ),\n  Happiness_Score = rnorm(mean = 30, sd = 20, n = 9),\n  GDP_per_capita = rnorm(mean = 30, sd = 20, n = 9),\n  Social_support = rnorm(mean = 30, sd = 20, n = 9),\n  Healthy_life_expectancy = rnorm(mean = 30, sd = 20, n = 9)\n)\n\n# Join the happiness data with the full world map\nworld_sf <- world_sf %>%\n  left_join(happiness_data, by = c(\"name\" = \"Country\"))\n\n\n# Create the first chart (Scatter plot)\np1 <- ggplot(world_sf, aes(\n  GDP_per_capita,\n  Happiness_Score,\n  tooltip = name,\n  data_id = Continent,\n  color = Continent\n)) +\n  geom_point_interactive(data = filter(world_sf, !is.na(Happiness_Score)), size = 4) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Create the second chart (Bar plot)\np2 <- ggplot(world_sf, aes(\n  x = reorder(name, Happiness_Score),\n  y = Happiness_Score,\n  tooltip = name,\n  data_id = Continent,\n  fill = Continent\n)) +\n  geom_col_interactive(data = filter(world_sf, !is.na(Happiness_Score))) +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Create the third chart (choropleth)\np3 <- ggplot() +\n  geom_sf(data = world_sf, fill = \"lightgrey\", color = \"lightgrey\") +\n  geom_sf_interactive(\n    data = filter(world_sf, !is.na(Happiness_Score)),\n    aes(fill = Continent, tooltip = name, data_id = Continent)\n  ) +\n  coord_sf(crs = st_crs(3857)) +\n  theme_void() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Combine the plots\ncombined_plot <- (p1 + p2) / p3 + plot_layout(heights = c(1, 2))\n\n# Create the interactive plot\ninteractive_plot <- girafe(ggobj = combined_plot)\ninteractive_plot <- girafe_options(\n  interactive_plot,\n  opts_hover(css = \"fill:red;stroke:black;\")\n)\n\ninteractive_plot\n```\n\n\n## Interactive table\n\nIt is very easy to insert an interactive table in your document thanks to the `DT` package. The output allows to filter rows, search for something and sort using a specific columns!\n\nInstall the library with `install.packages(\"DT\")`. Then, just pass a dataframe to the `datatable()` function to get a stunning interactive output!\n\n```{r}\nlibrary(DT)\ndata(iris)\n\n# Make a table\ndatatable(iris, filter = \"top\")\n```\n\n::: {.column-margin}\n<br/><br/><br/><br/><br/><br/>\nI've added a bit of CSS to make the font smaller on DT tables by the way üôÇ\n:::\n\n\n\n## A grey section\n\n::: {.cell .page-columns .page-full .column-screen .grey-section}\nIt's always good to have a grey section. Makes the document breath a bit. I've added a little utility class in `Lumo` to make sure you can make sections like this very easily. Check the [documentation](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!\n\nLet's use this space to render a little equation:\n\n$$\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n$$\n:::\n\n\n\n\n\n## Quarto Tricks\n\n`Lumo` is a great format, but to get the most out of it, you‚Äôll need to master a few Quarto tricks!\n\nThe good news? I‚Äôve compiled my 30+ favorite tips [in one place](https://www.productive-r-workflow.com/quarto-tricks). Just spend 30 minutes, and you'll be up to speed with all of them!\n\n<hr/>\n\nFor example, if you're creating multiple plots, each highlighting different aspects of your dataset, consider using *pills* to organize them!\n\n\n::: {.panel-tabset .nav-pills}\n\n## Scatterplot\n\nThis is a good old scatterplot of the iris dataset. If you want to learn more about how to make graphs in R, visit my [R graph gallery](https://www.r-graph-gallery.com)!\n\n\n```{r, fig.align='center'}\nggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + \n    geom_point() +\n    theme_ipsum()\n```\n\n## Boxplot\n\nYou can also make a [boxplot](https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html), but please do not hide the underlying distribution! This is widely explain in my data-to-viz.com project in case you're not convinced üòã. Check the next tab to get convinced!\n\n```{r, fig.align='center'}\n# create a dataset\ndata <- data.frame(\n  name=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)  ),\n  value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )\n)\n\n# Plot\ndata %>%\n  ggplot( aes(x=name, y=value, fill=name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n    theme_ipsum() +\n    theme(\n      legend.position=\"none\",\n      plot.title = element_text(size=11)\n    ) +\n    ggtitle(\"A boxplot that hides the underlying distribution\") +\n    xlab(\"\")\n```\n\n## Jittering\nSee what's happening now that the individual data points are visible! Would be a shame to miss this.\n\n```{r, fig.align='center'}\ndata %>%\n  ggplot( aes(x=name, y=value, fill=name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n    geom_jitter(color=\"black\", size=0.4, alpha=0.9) +\n    theme_ipsum() +\n    theme(\n      legend.position=\"none\",\n      plot.title = element_text(size=11)\n    ) +\n    ggtitle(\"A boxplot with jitter\") +\n    xlab(\"\")\n```\n\n\n:::\n\n\n\n\n## More Information\n\nLearn how to use and how to customize `Lumo` [here](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template).\n\n\n\n\n\n\n\n## Session Info\n\nWhen creating a Quarto document, it's a good practice to include details about your **working environment**. \n\nThis is easy to do‚Äîjust call `sessionInfo()`, and it will print out all your R and package versions. This simple step greatly enhances **reproducibility**.\n\n\n<button type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" >Session Information</button><div id=\"collapseOne\" class=\"accordion-collapse collapse\"><div>\n\n\n```{r}\nsessionInfo()\n```\n\n</div></div>\n\n\n","srcMarkdownNoYaml":"\n\n\n## Introduction\n\nQuarto is probably my favorite tool in the R/Python universe. Transforming your code and thoughts into a stunning report in one click always blows my mind.\n\nWhile the default Quarto appearance **looks great**, there are [a few tweaks](https://www.productive-r-workflow.com/quarto-tricks) I always apply to elevate the report even further. Rather than manually adding them each time, I bundled everything into a custom format called `lumo`.\n\n\n::: {.column-margin}\n\nBtw, you can learn how to master Quarto thanks to my online course: [Productive R Workflow](https://www.productive-r-workflow.com)\n\n:::\n\n\nThis document aims at showcasing how a quarto document made with the `lumo` format looks like.\n\n\n## Load Packages\n\nMake sure to load **all your packages** at the start of your document for clarity and consistency.\n\nNotice that the code chunks are folded by default. You can adjust this behavior with the `code-fold` option in the document's YAML header.\n\n\n```{r, warning=F, message=F}\nlibrary(tidyverse) \nlibrary(hrbrthemes) # <1>\nlibrary(viridis) # <2>\nlibrary(ggiraph)\nlibrary(patchwork) \nlibrary(sf)\n```\n\n1. this package provides my favorite `ggplot2` theme: `theme_ipsum()`\n2. because I was too lazy to find something better in the [R Color Finder](https://r-graph-gallery.com/color-palette-finder)!\n\n:::{.callout}\nBy the way, you should open the code chunk that is folded above. ‚¨ÜÔ∏è\nThere is a little stunning surprise on its right hand side.\n:::\n\n\n## Main Features\n\n### Typography\n\nYou may have noticed the typography differs from the default Quarto style. I've also added __extra spacing__ above each title for better readability, and underlined them to make the headings stand out more.\n\n### Header & Footer\n\nThe header is fully customized, complete with a fun GitHub corner linking to the original code. Plus, there are animated particles for a touch of whimsy. Scroll down, and you'll find a custom footer as well.\n\n<hr/>\n\nFor a complete list of features, [visit the documentation](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!\n\nOh and since we're here, did you know you can easily include a full width interactive map with `leaflet` in a quarto doc? üòç\n```{r}\n#| column: screen\n#| out-width: 100%\n\n# Load the library.\nlibrary(leaflet)\n\n# Make a map\nleaflet() %>%\n  addTiles() %>% # Add default OpenStreetMap map tiles\n  addMarkers(lng = 174.768, lat = -36.852, popup = \"The birthplace of R\")\n```\n\n\n## How It Works\n\n`Lumo` is a Quarto **custom format**. With a single command, you can add an `_extension` folder to your working directory, containing all the styles and content needed to create a report like this.\n\nIt takes less than 28 seconds, and you can find all the details [here](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template).\n\n<hr/>\n\nBy the way, did you know you can link graphs together using [ggiraph](https://r-graph-gallery.com/package/ggiraph.html)? Its syntax is quite similar to `ggplot2` and it produces stunning, interactive outputs. Try hovering over one of the charts below!\n\nPretty close to magic, isn‚Äôt it?\n\n\n```{r, fig.cap=\"Figure: three graphs connected thanks to `ggiraph`\"}\n\n# Read the full world map\nworld_sf <- read_sf(\"https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/world.geojson\")\nworld_sf <- world_sf %>%\n  filter(!name %in% c(\"Antarctica\", \"Greenland\"))\n\n# Create a sample dataset\nhappiness_data <- data.frame(\n  Country = c(\n    \"France\", \"Germany\", \"United Kingdom\",\n    \"Japan\", \"China\", \"Vietnam\",\n    \"United States of America\", \"Canada\", \"Mexico\"\n  ),\n  Continent = c(\n    \"Europe\", \"Europe\", \"Europe\",\n    \"Asia\", \"Asia\", \"Asia\",\n    \"North America\", \"North America\", \"North America\"\n  ),\n  Happiness_Score = rnorm(mean = 30, sd = 20, n = 9),\n  GDP_per_capita = rnorm(mean = 30, sd = 20, n = 9),\n  Social_support = rnorm(mean = 30, sd = 20, n = 9),\n  Healthy_life_expectancy = rnorm(mean = 30, sd = 20, n = 9)\n)\n\n# Join the happiness data with the full world map\nworld_sf <- world_sf %>%\n  left_join(happiness_data, by = c(\"name\" = \"Country\"))\n\n\n# Create the first chart (Scatter plot)\np1 <- ggplot(world_sf, aes(\n  GDP_per_capita,\n  Happiness_Score,\n  tooltip = name,\n  data_id = Continent,\n  color = Continent\n)) +\n  geom_point_interactive(data = filter(world_sf, !is.na(Happiness_Score)), size = 4) +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Create the second chart (Bar plot)\np2 <- ggplot(world_sf, aes(\n  x = reorder(name, Happiness_Score),\n  y = Happiness_Score,\n  tooltip = name,\n  data_id = Continent,\n  fill = Continent\n)) +\n  geom_col_interactive(data = filter(world_sf, !is.na(Happiness_Score))) +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Create the third chart (choropleth)\np3 <- ggplot() +\n  geom_sf(data = world_sf, fill = \"lightgrey\", color = \"lightgrey\") +\n  geom_sf_interactive(\n    data = filter(world_sf, !is.na(Happiness_Score)),\n    aes(fill = Continent, tooltip = name, data_id = Continent)\n  ) +\n  coord_sf(crs = st_crs(3857)) +\n  theme_void() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"none\"\n  )\n\n# Combine the plots\ncombined_plot <- (p1 + p2) / p3 + plot_layout(heights = c(1, 2))\n\n# Create the interactive plot\ninteractive_plot <- girafe(ggobj = combined_plot)\ninteractive_plot <- girafe_options(\n  interactive_plot,\n  opts_hover(css = \"fill:red;stroke:black;\")\n)\n\ninteractive_plot\n```\n\n\n## Interactive table\n\nIt is very easy to insert an interactive table in your document thanks to the `DT` package. The output allows to filter rows, search for something and sort using a specific columns!\n\nInstall the library with `install.packages(\"DT\")`. Then, just pass a dataframe to the `datatable()` function to get a stunning interactive output!\n\n```{r}\nlibrary(DT)\ndata(iris)\n\n# Make a table\ndatatable(iris, filter = \"top\")\n```\n\n::: {.column-margin}\n<br/><br/><br/><br/><br/><br/>\nI've added a bit of CSS to make the font smaller on DT tables by the way üôÇ\n:::\n\n\n\n## A grey section\n\n::: {.cell .page-columns .page-full .column-screen .grey-section}\nIt's always good to have a grey section. Makes the document breath a bit. I've added a little utility class in `Lumo` to make sure you can make sections like this very easily. Check the [documentation](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!\n\nLet's use this space to render a little equation:\n\n$$\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n$$\n:::\n\n\n\n\n\n## Quarto Tricks\n\n`Lumo` is a great format, but to get the most out of it, you‚Äôll need to master a few Quarto tricks!\n\nThe good news? I‚Äôve compiled my 30+ favorite tips [in one place](https://www.productive-r-workflow.com/quarto-tricks). Just spend 30 minutes, and you'll be up to speed with all of them!\n\n<hr/>\n\nFor example, if you're creating multiple plots, each highlighting different aspects of your dataset, consider using *pills* to organize them!\n\n\n::: {.panel-tabset .nav-pills}\n\n## Scatterplot\n\nThis is a good old scatterplot of the iris dataset. If you want to learn more about how to make graphs in R, visit my [R graph gallery](https://www.r-graph-gallery.com)!\n\n\n```{r, fig.align='center'}\nggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + \n    geom_point() +\n    theme_ipsum()\n```\n\n## Boxplot\n\nYou can also make a [boxplot](https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html), but please do not hide the underlying distribution! This is widely explain in my data-to-viz.com project in case you're not convinced üòã. Check the next tab to get convinced!\n\n```{r, fig.align='center'}\n# create a dataset\ndata <- data.frame(\n  name=c( rep(\"A\",500), rep(\"B\",500), rep(\"B\",500), rep(\"C\",20), rep('D', 100)  ),\n  value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )\n)\n\n# Plot\ndata %>%\n  ggplot( aes(x=name, y=value, fill=name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n    theme_ipsum() +\n    theme(\n      legend.position=\"none\",\n      plot.title = element_text(size=11)\n    ) +\n    ggtitle(\"A boxplot that hides the underlying distribution\") +\n    xlab(\"\")\n```\n\n## Jittering\nSee what's happening now that the individual data points are visible! Would be a shame to miss this.\n\n```{r, fig.align='center'}\ndata %>%\n  ggplot( aes(x=name, y=value, fill=name)) +\n    geom_boxplot() +\n    scale_fill_viridis(discrete = TRUE, alpha=0.6) +\n    geom_jitter(color=\"black\", size=0.4, alpha=0.9) +\n    theme_ipsum() +\n    theme(\n      legend.position=\"none\",\n      plot.title = element_text(size=11)\n    ) +\n    ggtitle(\"A boxplot with jitter\") +\n    xlab(\"\")\n```\n\n\n:::\n\n\n\n\n## More Information\n\nLearn how to use and how to customize `Lumo` [here](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template).\n\n\n\n\n\n\n\n## Session Info\n\nWhen creating a Quarto document, it's a good practice to include details about your **working environment**. \n\nThis is easy to do‚Äîjust call `sessionInfo()`, and it will print out all your R and package versions. This simple step greatly enhances **reproducibility**.\n\n\n<button type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" >Session Information</button><div id=\"collapseOne\" class=\"accordion-collapse collapse\"><div>\n\n\n```{r}\nsessionInfo()\n```\n\n</div></div>\n\n\n"},"formats":{"lumo-html":{"identifier":{"display-name":"HTML","target-format":"lumo-html","base-format":"html","extension-name":"lumo"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"shortcodes":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"include-after-body":["_extensions/holtzy/lumo/footer.html"],"css":["_extensions/holtzy/lumo/style.css"],"filters":[],"self-contained":true,"output-file":"lumo.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","code-summary":"Code","toc-location":"left","toc-title":" ","theme":["custom.scss"],"template-partials":["_extensions/holtzy/lumo/title-block.html"],"smooth-scroll":true,"code-annotations":"hover","title-block-banner":true,"revealjs-plugins":[],"title":"Lumo: a clean Quarto template","subtitle":" Quarto is a powerful tool that transforms R or Python code into beautifully clean reports. <br/> `Lumo` is a __custom format__ for Quarto, enhancing the default appearance to make it even more polished and aligned with your brand. <br/> This document showcases how a lumo-styled document looks. ","author":"Holtz Yan","date":"last-modified","logo":"logo.png","github-repo":"https://www.github.com","primary-color":"black","is-particlejs-enabled":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}